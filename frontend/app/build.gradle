plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'

    id 'androidx.navigation.safeargs'  // Navigation

    id 'dagger.hilt.android.plugin'  // Dependency Injection

    id 'com.google.protobuf'  // Proto DataStore

    id 'com.google.gms.google-services'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        applicationId "com.guavas.cz3002"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
        freeCompilerArgs += "-Xopt-in=kotlin.RequiresOptIn"
    }
    buildFeatures {
        dataBinding true
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    testImplementation 'junit:junit:4.+'
    testImplementation 'org.hamcrest:hamcrest:2.2'
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_android_version"
    testImplementation 'org.mockito:mockito-core:2.23.0'
    testImplementation "androidx.arch.core:core-testing:2.1.0"

    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    // Timber (Logging Library)
    implementation "com.jakewharton.timber:timber:$timber_version"

    // Kotlin Coroutine
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_android_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-play-services:$coroutines_android_version"

    // Lifecycle Component
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"

    // Navigation Component
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    // Hilt (Dependency Injection)
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:$hilt_viewmodel_version"
    kapt "androidx.hilt:hilt-compiler:$hilt_viewmodel_version"

    // Proto DataStore
    implementation "androidx.datastore:datastore:$datastore_version"
    implementation "com.google.protobuf:protobuf-javalite:3.10.0"

    // Glide (Image Loading)
    implementation "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"

    // Lottie
    implementation 'com.airbnb.android:lottie:3.6.0'

    // Firebase
    implementation platform("com.google.firebase:firebase-bom:$firebase_bom_version")

    // Firebase Authentication
    implementation "com.google.firebase:firebase-auth-ktx"

    // Firebase RTD
    implementation "com.google.firebase:firebase-database-ktx"

    // Firebase Cloud Messaging
    implementation "com.google.firebase:firebase-messaging-ktx"

    // Firebase Storage
    implementation "com.google.firebase:firebase-storage-ktx"
    implementation 'com.firebaseui:firebase-ui-storage:7.1.1'

}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.10.0"
    }

    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {
                    option 'lite'
                }
            }
        }
    }
}